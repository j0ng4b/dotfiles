vim9script

#############################
####     BASIC SETUP     ####
#############################

# Enable syntax highlight
syntax enable

# Enable file type detection
filetype plugin indent on

# Enable under curly
if empty(&t_Cs) || empty(&t_Ce)
    &t_Cs = "\e[4:3m"
    &t_Ce = "\e[4:0m"
endif

# Set different cursors for different modes
&t_SI = "\e[5 q"
&t_SR = "\e[3 q"
&t_EI = "\e[1 q"


#############################
####         XDG         ####
#############################

import './xdg.vim' as xdg

if empty($MYVIMRC)
    $MYVIMRC = expand('<sfile>:p')
endif


#############################
####       OPTIONS       ####
#############################

# Compatibility
if &compatible
    &compatible = v:false
endif
&cpoptions = &cpoptions .. 'EMnW'

# Indentation
&autoindent = v:true
&expandtab = v:true
&shiftround = v:true
&shiftwidth = 0
&softtabstop = -1
&tabstop = 4

# Files and Buffer
&autoread = v:true
&confirm = v:true
&hidden = v:true

# UI and Colors
&background = 'dark'
&colorcolumn = '+1'
&cursorline = v:true
&display = 'truncate'
&termguicolors = v:true

# Behaviour
&backspace = 'indent,eol,start'
&belloff = 'all'
&completeopt = 'menuone,popup,noinsert,noselect'
&encoding = 'utf-8'
&history = 250
&scrolloff = 5
&shortmess = 'astTcC'
&showcmd = v:true
&showmode = v:false
&signcolumn = 'number'

# Line break
&breakindent = v:true
&breakindentopt = 'sbr'
&linebreak = v:true
&showbreak = '󱞩'

# Command line
&cmdheight = 2
&cmdwinheight = 5

# Swap file
&directory = xdg.vim_state_home .. '/swap//'
&updatetime = 100
mkdir(&directory[0 : -3], 'p', 0o700)

# Special characters
&fillchars = 'eob: ,vert:┊,lastline:+'
&list = v:true
&listchars = 'eol:󱞣,tab:┊ ,lead:·,leadmultispace:┊   ,trail:*'

# Format
&textwidth = 80

# Window and Preview window
&helpheight = 0
&previewheight = 10
&splitbelow = v:true
&splitright = v:true

# Search
&ignorecase = v:true
&incsearch = v:true
&smartcase = v:true

# Status line and Tab line
&laststatus = 2
&showtabline = 2
&tabpagemax = 25

# Mouse
&mouse = 'ar'
&mousemodel = 'popup' # setup a menu
&ttymouse = 'sgr'

# Line number
&number = v:true
&relativenumber = v:true

# Spell check
&spell = v:true
&spelllang = 'en,pt_br'
&spelloptions = 'camel'
&spellsuggest = 'fast,10'
mkdir(xdg.vim_data_home .. '/spell', 'p', 0o700)

# Timeout
&timeoutlen = 350
&ttimeoutlen = 100

# Undo
&undodir = xdg.vim_state_home .. '/undo//'
&undofile = v:true
&undolevels = 250
&undoreload = 2500
mkdir(&undodir[0 : -3], 'p', 0o700)

# Viminfo
&viminfofile = xdg.vim_state_home .. '/viminfo'

# Wild menu
&wildcharm = 9             # 9 is <Tab>
&wildmenu = v:true
&wildmode = 'longest:full'
&wildoptions = 'pum'


#############################
####      FUNCTIONS      ####
#############################
def BufferClose(): void
    var curBuffer = bufnr('%')

    if getbufvar(curBuffer, '&modified')
        echo "Can't close: the buffer was modified!"
        return
    endif

    var windowsWithBuffer = filter(range(1, winnr('$')),
        'winbufnr(v:val) == ' .. curBuffer)
    var curWindow = winnr()

    for window in windowsWithBuffer
        execute ':' .. window .. 'wincmd w'

        var listedBuffers = filter(range(1, bufnr('$')),
            'buflisted(v:val) && v:val != ' .. curBuffer)

        var hiddenBuffers = filter(copy(listedBuffers), 'bufwinnr(v:val) < 0')
        var gotoBuffer = (hiddenBuffers + listedBuffers + [-1])[0]

        if gotoBuffer > 0
            execute 'buffer ' .. gotoBuffer
        else
            enew
        endif
    endfor

    execute 'bdelete ' .. curBuffer
    execute ':' .. curWindow .. 'wincmd w'
enddef

def BufferMove(cmd: string): void
    if cmd != 'bprevious' || cmd != 'bnext'
        finish
    endif

    execute cmd
    while &buftype == 'terminal'
        execute cmd
    endwhile
enddef


#############################
####       AUTOCMD       ####
#############################

augroup VimHightlightOnSearch
    autocmd!
    autocmd CmdlineEnter /,? set hlsearch
    autocmd CmdlineLeave /,? set nohlsearch
augroup END

augroup VimCursor
    autocmd!
    autocmd VimEnter * silent !echo '\033[1 q'
    autocmd VimLeave * silent !echo '\033[4 q'
augroup END


#############################
####       KEYMAPS       ####
#############################

# Exit back to normal mode with `jk`
imap jk <Esc>
vmap jk <Esc>


# Disable arrow keys
imap <Up>    <Nop>
imap <Left>  <Nop>
imap <Right> <Nop>
imap <Down>  <Nop>

map  <Up>    <Nop>
map  <Left>  <Nop>
map  <Right> <Nop>
map  <Down>  <Nop>


# Make Tab key scroll through the wildmenu
cmap <expr> <Tab> pumvisible() ? '<Down>' : '<Tab>'


# Save
imap <C-s>     <Cmd>w<CR>
imap <C-S-s>   <Cmd>wall<CR>

map  <C-s>     <Cmd>w<CR>
map  <C-S-s>   <Cmd>wall<CR>


# Quit
imap <C-q>     <Cmd>qall<CR>
imap <C-S-q>   <Cmd>qall!<CR>

map  <C-q>     <Cmd>qall<CR>
map  <C-S-q>   <Cmd>qall!<CR>


# Buffer
nmap bo        <Cmd>enew<CR>
nmap bc        <Cmd>call <SID>BufferClose()<CR>

nmap bn        <Cmd>call <SID>BufferMove('bnext')<CR>
nmap bp        <Cmd>call <SID>BufferMove('bprevious')<CR>


# Window
nmap ws        <Cmd>wincmd s<CR>
nmap wv        <Cmd>wincmd v<CR>

nmap wc        <Cmd>wincmd c<CR>

nmap wh        <Cmd>wincmd h<CR>
nmap wj        <Cmd>wincmd j<CR>
nmap wk        <Cmd>wincmd k<CR>
nmap wl        <Cmd>wincmd l<CR>
nmap wp        <Cmd>wincmd p<CR>

nmap wmh       <Cmd>wincmd H<CR>
nmap wmj       <Cmd>wincmd J<CR>
nmap wmk       <Cmd>wincmd K<CR>
nmap wml       <Cmd>wincmd L<CR>


# Tab
nmap to        <Cmd>tabnew<CR>
nmap tc        <Cmd>tabclose<CR>

nmap tn        <Cmd>tabnext<CR>
nmap tp        <Cmd>tabprevious<CR>
nmap tf        <Cmd>tabfirst<CR>
nmap tl        <Cmd>tablast<CR>

nmap th       <Cmd>tabmove -<CR>
nmap tr       <Cmd>tabmove +<CR>

nnoremap tt   t

#############################
####     COLORSCHEME     ####
#############################

g:gruvbox_italic = 1
g:gruvbox_contrast_dark = 'hard'
g:gruvbox_hls_cursor = 'aqua'
g:gruvbox_sign_column = 'bg0'
g:gruvbox_italicize_strings = 1
g:gruvbox_invert_signs = 0
g:gruvbox_improved_strings = 1
g:gruvbox_improved_warnings = 1
g:gruvbox_guisp_fallback = 'fg'
silent! colorscheme gruvbox

packadd! everforest
g:everforest_show_eob = 0
g:everforest_background = 'hard'
g:everforest_ui_contrast = 'high'
g:everforest_enable_italic = 1
g:everforest_spell_foreground = 'colored'
g:everforest_better_performance = 1
g:everforest_disable_terminal_colors = 1
#silent! colorscheme everforest

#silent! colorscheme rosepine


#############################
####       PLUGINS       ####
#############################

# Disable Netrw
g:loaded_netrw       = 1
g:loaded_netrwPlugin = 1

# NERDTree and NERDTreeGitStatus
runtime plugins/nerdtree.vim

# GitGutter
runtime plugins/gitgutter.vim

# delimitMate and vim-endwise
runtime plugins/delimitmate.vim

# Lsp
runtime plugins/lsp.vim

# Vsnip
runtime plugins/vsnip.vim

