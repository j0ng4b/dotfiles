#!/usr/bin/env sh


_notify() {
    # Battery status
    current_status=$(cat "$status_file")

    # Low battery levels and timeouts
    level_low=10
    level_critical=5

    # When the battery goes less than or equal this value send a notification.
    notify_level="$level_low"

    notify() {
        appname="scripter-battery"
        notify-send -a "$appname" -u $1 "" "{\"status\": \"$2\", \"capacity\": \"$3\"}"
    }


    # Don't run notifier if already running
    pid_file="/tmp/battery_notifier.pid"

    if [ -e "$pid_file" ] && kill -0 $(cat "$pid_file") 2>/dev/null; then
        warn "Battery notifier already running!"
        exit 1
    fi


    (
        while true; do
            # Get new battery status and current capacity
            new_status=$(cat "$status_file")
            capacity=$(cat "$capacity_file")


            # Notify low battery
            if [ "$current_status" = "Discharging" -a "$capacity" -le "$notify_level" ]; then
                notify critical "low" "$capacity"

                # Update the battery level threshold
                notify_level="$level_critical"
            fi

            if [ "$new_status" = "$current_status" ]; then
                sleep 1
                continue
            fi

            # When the battery get fully charged
            if [ "$new_status" = "Full" -o "$new_status" = "Not charging" ]; then
                # From Discharging to Full
                # When: charger was connected when battery is already full.
                if [ "$current_status" = "Discharging" ]; then
                    notify normal "full" "$capacity"

                # From Charging to Full
                # When: battery was charging then get full capacity.
                else
                    notify normal "full" "$capacity"
                fi
            # Notify when charger is connected
            elif [ "$new_status" = "Charging"  ]; then
                notify normal "charging" "$capacity"

            # Notify when charger is disconnected
            elif [ "$new_status" = "Discharging" ]; then
                notify normal "battery" "$capacity"

                # Reset notification of low battery
                if [ "$capacity" -ge "$level_low" ]; then
                    notify_level="$level_low"
                fi
            # Any invalid status is ignored
            else
                sleep 1
                continue
            fi

            # Update the current battery status
            current_status="$new_status"

            sleep 2
        done
    ) &

    echo $! > "$pid_file"
}

main() {
    batteries=$(find /sys/class/power_supply/ -name "BAT*")
    if [ $(echo $batteries | wc -l) -gt 0 ]; then
        enable=1

        for bat in $batteries; do
            capacity_file="$bat/capacity"
            status_file="$bat/status"

            break
        done
    else
        enable=0
    fi

    case $1 in
        status)
            if [ $enable -eq 1 ]; then
                status=$(cat "$status_file" | sed -e 's/.*/\L&/')
                capacity=$(cat "$capacity_file")
            else
                warn 'No battery!'
                exit 1
            fi

            echo "{ \"enable\": \"$enable\", \"capacity\": \"$capacity\", \"status\": \"$status\" }"
            ;;

        notify)
            if [ $enable -eq 1 ]; then
                _notify
            else
                warn 'No battery!'
                exit 1
            fi
            ;;
    esac
}

main "$@"

