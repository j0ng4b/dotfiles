#!/usr/bin/env sh

# Cache
cache_dir=$SCRIPT_CACHE_DIR
cache_last_notify_id=$cache_dir/last_notify_id
cache_last_notify_time=$cache_dir/last_notify_time

if [ ! -d "$cache_dir" ]; then
    mkdir -p "$cache_dir"

    echo 0 > $cache_last_notify_id
    echo 0 > $cache_last_notify_time
fi


send_notification=''
if [ "$1" = "--notify" ]; then
    send_notification=true
    shift
fi


case $1 in
    # TODO: include a --save and --restores option to save set value to later
    # be restored.
    set)
        signal=$(echo $2 | sed -ne 's/\([-|+]*\).*/\1/p')
        value=$(echo $2 | sed -ne 's/[^0-9]*\([0-9]*\)\(%*\)/\1\2/p')

        # For brightnessctl the minus signal should be at end of value and plus
        # signal must be at start but on this script all signal must be at start
        # of the value, so conversion is needed.
        #
        # E.g.:
        #   -50 or -50% -> 50- or 50%-
        #   +50 or +50% -> no conversion
        [ "$signal" = '+' ] && value=$signal$value
        [ "$signal" = '-' ] && value=$value$signal

        brightnessctl --class backlight set $value 2>&1 >/dev/null

        # Notify current volume value
        appname="scripter-brightness"
        timeout=2000

        value=$(brightnessctl --class backlight get)
        max=$(brightnessctl --class backlight max)
        value=$(( $value * 100 / $max ))

        echo $(date +%s) > $cache_last_notify_time


        if [ -z "$send_notification" ]; then
            exit 0
        fi

        time=$(cat $cache_last_notify_time)
        if [ "$(( $(date +%s) - $time ))" -gt "$(( $timeout / 1000 ))" ]; then
            id=$(notify-send -p -h int:value:$value -a "$appname" -t $timeout "brightness" "<span font_desc='Phosphor-Fill' size='24pt'></span>")
            echo $id > $cache_last_notify_id
        else
            id=$(cat $cache_last_notify_id)
            notify-send -r $id -h int:value:$value -a "$appname" -t $timeout "brightness" "<span font_desc='Phosphor-Fill' size='24pt'></span>"
        fi
        ;;

    get)
        cur=$(brightnessctl --class backlight get)
        max=$(brightnessctl --class backlight max)

        echo "{ \"current\": \"$cur\", \"max\": \"$max\" }"
        ;;

    *)
        error "Unknown command '$subcmd'!"
        exit 1
        ;;
esac

