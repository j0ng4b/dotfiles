#!/usr/bin/env sh

# Cache
cache_dir=$SCRIPT_CACHE_DIR
cache_notification_mode=$cache_dir/mode
cache_notifications_list=$cache_dir/list
cache_notification_icons=$cache_dir/icons

if [ ! -d "$cache_dir" ]; then
    mkdir -p "$cache_dir"
    mkdir -p $cache_notification_icons

    echo '' > $cache_notifications_list
    echo 'noisy' > $cache_notification_mode
fi


_get_status() {
    mode=$(dunstctl get-pause-level)

    if [ $mode -ge 90 ]; then
        echo "silent"
    elif [ $mode -ge 60 ]; then
        echo "important"
    else
        echo "noisy"
    fi
}

cmd=$1
case $cmd in
    status)
        _get_status
        ;;

    set)
        mode=$2
        case $mode in
            noisy)
                level=0
                ;;

            important)
                level=60
                ;;

            silent)
                level=100
                ;;

            toggle)
                case $(cat $cache_notification_mode) in
                    noisy)
                        mode=important
                        level=60
                        ;;

                    important)
                        mode=silent
                        level=100
                        ;;

                    silent)
                        mode=noisy
                        level=0
                        ;;
                esac
                ;;
        esac

        echo $mode > $cache_notification_mode
        eval "dunstctl set-pause-level $level"
        ;;

    list)
        printf '['

        list=""
        while read -r line; do
            [ -z "$line" ] && continue

            icon_path="$cache_notification_icons/$(echo "$line" | jq -r '.id')"
            if [ ! -e "$icon_path" ]; then
                line=$(echo "$line" | jq '.icon.path = ""')
            fi

            list="$line,$list"
        done < $cache_notifications_list
        list=${list%,}

        printf "$list"
        echo ']'
        ;;

    dismiss)
        if [ "$2" = "all" ]; then
            echo '' > $cache_notifications_list
            rm -f $cache_notification_icons/*

            exit 0
        fi

        sed -i "/\"id\": \"$2\"/d" $cache_notifications_list

        icon_path="$cache_notification_icons/$2"
        if [ -e "$icon_path" ]; then
            rm $icon_path
        fi
        ;;

    *)
        id="$DUNST_ID"

        app_name="$DUNST_APP_NAME"
        app_icon=""

        urgency="$DUNST_URGENCY"
        summary="$DUNST_SUMMARY"
        body="$DUNST_BODY"

        icon_path="$DUNST_ICON_PATH"
        if [ -z "$icon_path" ]; then
            icon_path="$cache_notification_icons/$id"
        fi
        icon_width=48
        icon_height=48

        timestamp=$(( $(cut -d" " -f1 /proc/uptime | tr -d ".") * 10 ))

        case $app_name in
            scripter-brightness |\
            scripter-multimedia |\
            scripter-battery)
                exit 0
                ;;

            scripter-screenshot)
                app_name='Screenshot'

                # Check if screenshot is saved to clipboard
                if [ -n "$body" ]; then
                    icon_path="$HOME$(echo "$body" | sed -n 's/~//p')"
                else
                    cp "$icon_path" "$cache_notification_icons/$id"
                    icon_path="$cache_notification_icons/$id"
                fi

                icon_width=100
                icon_height=60
                ;;

            Spotify)
                artUrl=$(playerctl --player=spotify metadata --format '{{mpris:artUrl}}')
                curl --silent -fO $artUrl --output-dir $cache_notification_icons

                id=$(basename "$artUrl")
                icon_path="$cache_notification_icons/$id"
                ;;
        esac

        ## Sanitize body
        if [ $(echo "$body" | wc -l) -gt 6 ]; then
            body="$(echo "$body" | head -n 6)\n..."
        fi
        body=$(echo "$body" | sed ':a;N;$!ba;s/\n/\\\\n/g')
        body=$(echo "$body" | sed 's/"/\\"/g')

        buffer='{'
        buffer="$buffer$(printf '"id": "%s",' $id)"
        buffer="$buffer$(printf '"summary": "%s",' "$summary")"
        buffer="$buffer$(printf '"body": "%s",' "$body")"
        buffer="$buffer$(printf '"urgency": "%s",' "$urgency")"
        buffer="$buffer$(printf '"timestamp": %d,' $timestamp)"


        ## App
        buffer="$buffer$(printf '"app": {')"
        buffer="$buffer$(printf '"name": "%s",' "$app_name")"

        app_name="$(echo "$app_name" | tr '[:upper:]' '[:lower:]')"
        app_icon="/usr/share/icons/Papirus/128x128/apps/$app_name.svg"
        if [ ! -f "$app_icon" ]; then
            app_icon=""
        fi
        buffer="$buffer$(printf '"icon": "%s"' "$app_icon")"
        buffer="$buffer$(printf '},')"


        ## Icon
        buffer="$buffer$(printf '"icon": {')"
        buffer="$buffer$(printf '"path": "%s",' "$icon_path")"
        buffer="$buffer$(printf '"width": %d,' "$icon_width")"
        buffer="$buffer$(printf '"height": %d' "$icon_height")"
        buffer="$buffer$(printf '}')"

        buffer="$buffer}\n"
        printf "$buffer" >> $cache_notifications_list
        ;;
esac

