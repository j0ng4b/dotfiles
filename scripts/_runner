#!/usr/bin/env sh

# Scripts directory root
root=$(cd $(dirname $0); pwd)

# Source Commons & Keys
. $root/_common


## Cache
sr_cache_dir=${XDG_CACHE_HOME:-${HOME}/.cache}/script-runner
if [ ! -d "$sr_cache_dir" ]; then
    mkdir -p "$sr_cache_dir"
fi

_get_dotfiles_root() {
    test_dir=$(realpath $root)

    while [ "$test_dir" != "$HOME" ]; do
        if [ -x "$test_dir/dotfile" ]; then
            break
        fi

        test_dir=$(realpath $(dirname $test_dir))
    done

    if [ "$test_dir" != "$HOME" ]; then
        echo "$test_dir"
        return 0
    else
        echo ""
        return 1
    fi
}

_run_script() {
    script=$1

    # Get script arguments. As scripts are run as sub-shell it will inherits
    # all arguments passed to _runner so a simple shift of argument list will
    # pass the correct arguments to script that will be run.
    shift

    # Try find scripts directory
    if [ -e "$root/$script.sh" ]; then
        if [ -x "$root/$script.sh" ]; then
            (
                export SCRIPT_CACHE_DIR=$sr_cache_dir/$script

                # Common script
                . $root/_common
                . $root/_keys

                # Run script
                . $root/$script.sh
            )
            # WARNING: Do not remove!
            #
            # Never should be echoed after script execution. Immediately exit
            # the runner script!
            #
            # If some script call another script (e.g. weather calls location)
            # through this script (_runner) the output of this script (_runner)
            # will be passed to caller script alongside with callee script
            # output.
            exit $?
        else
            error "Script hasn't executable permission!"
        fi
    else
        error "Can't find script to run!"
        exit 1
    fi
}

_run_script "$@"

