;; Helper widgets for the controls
(defwidget control[icon label onclick ?onrightclick expanded]
  (eventbox
    :cursor 'pointer'
    :onclick onclick
    :onrightclick {onrightclick == '' ? onclick : onrightclick}
    :hexpand true
    (box
      :class 'control'
      :space-evenly false
      :spacing 0
      :orientation 'vertical'
      (label
        :class 'icon ${expanded ? 'expanded' : ''}'
        :text {icon}
      )
      (overlay
        :height 20
        (box
          :class 'padding'
          :visible {expanded}
        )
        (label
          :class 'label ${expanded ? 'expanded' : ''}'
          :text {label}
        )
      )
    )
  )
)


(defwidget slider[icon value ?max onchange]
  (eventbox
    :cursor 'pointer'
    (box
      :class 'slider'
      :orientation 'horizontal'
      :space-evenly false
      :spacing 10
      (label
        :class 'icon'
        :halign 'center'
        :text {icon}
      )
      (scale
        :class 'bar'
        :orientation 'horizontal'
        :onchange {onchange}
        :hexpand true
        :min 0
        :max {max == '' ? 101 : max + 1}
        :value {value}
      )
    )
  )
)


(defwidget separator[left right]
  (overlay
    :class 'separator'
    :valign 'end'
    :height 20
    :hexpand true
    (box :class 'layer-1')
    (box :class 'layer-2${left ? '-left' : ''}${right ? '-right' : ''}')
  )
)


;; The actual control widgets
(defwidget main-menu[]
  (box
    :orientation 'vertical'
    :space-evenly false
    :spacing 10
    (slider
      :icon {multimedia.speaker.volume < 0.33 ? '' :
            multimedia.speaker.volume < 0.66 ? '' : ''}
      :value {multimedia.speaker.volume * 100}
      :onchange 'scripts/scripter multimedia speaker set {}'
    )
    (slider
      :icon ''
      :value {brightness.current}
      :max {brightness.max}
      :onchange 'scripts/scripter brightness set {}'
    )
  )
)

(defwidget wifi-menu[]
  (box
    :orientation 'vertical'
    :class 'control-menu left'
  )
)


(defwidget bluetooth-menu[]
  (box
    :orientation 'vertical'
    :class 'control-menu'
  )
)


;; The main control widget
(defvar control_center_show_menu 0)
(defwidget controls[]
  (box
    :orientation 'vertical'
    :space-evenly false
    :spacing {control_center_show_menu == 0 ? 30 : 0}
    :vexpand true
    (box
      :orientation 'horizontal'
      :space-evenly false
      :valign 'start'
      :class 'controls'
      (control
        :icon {ethernet.enable == 1 ? '' : wifi.enable == 1 ? '' : ''}
        :label {ethernet.enable == 1 ? 'Wired' : 'Wi-Fi'}
        :onclick {ethernet.enable == 1 ? '' : 'scripts/scripter network wifi toggle'}
        :onrightclick {ethernet.enable == 1 ? '' :
          'eww update control_center_show_menu=${control_center_show_menu == 1 ? 0 : 1}'}
        :expanded {control_center_show_menu == 1}
      )
      (separator
        :left {control_center_show_menu == 1}
        :right {control_center_show_menu == 2}
      )
      (control
        :icon {bluetooth.enable == 1 ? '' : ''}
        :label 'Bluetooth'
        :onclick 'scripts/scripter network bluetooth toggle'
        :onrightclick {ethernet.enable == 1 ? '' :
          'eww update control_center_show_menu=${control_center_show_menu == 2 ? 0 : 2}'}
        :expanded {control_center_show_menu == 2}
      )
      (separator
        :left {control_center_show_menu == 2}
        :right false
      )
      (control
        :icon {multimedia.speaker.mute == 1 ? '' : ''}
        :label {multimedia.speaker.mute == 1 ? 'Mute' : 'Volume'}
        :onclick 'scripts/scripter multimedia speaker mute'
        :expanded false
      )
      (separator
        :left false
        :right false
      )
      (control
        :icon {notification == 'noisy' ? '' :
          notification == 'important' ? '' : ''}
        :label {notification == 'noisy' ? 'Noisy' :
          notification == 'important' ? 'Important' : 'Silent'}
        :onclick 'scripts/scripter notification set toggle'
        :expanded false
      )
    )
    (stack
      :selected control_center_show_menu
      :same-size false
      :transition 'slidedown'
      (main-menu)
      (wifi-menu)
      (bluetooth-menu)
    )
  )
)

