//
//                       ███╗   ██╗██╗██████╗ ██╗
//                       ████╗  ██║██║██╔══██╗██║
//                       ██╔██╗ ██║██║██████╔╝██║
//                       ██║╚██╗██║██║██╔══██╗██║
//                       ██║ ╚████║██║██║  ██║██║
//                       ╚═╝  ╚═══╝╚═╝╚═╝  ╚═╝╚═╝
//
//
//              ██████╗ ██████╗ ███╗   ██╗███████╗██╗ ██████╗
//             ██╔════╝██╔═══██╗████╗  ██║██╔════╝██║██╔════╝
//             ██║     ██║   ██║██╔██╗ ██║█████╗  ██║██║  ███╗
//             ██║     ██║   ██║██║╚██╗██║██╔══╝  ██║██║   ██║
//             ╚██████╗╚██████╔╝██║ ╚████║██║     ██║╚██████╔╝
//              ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝     ╚═╝ ╚═════╝
//


////////////////////////////////////////////////////////////////////////////////
//  ╔═╗┌─┐┌┐┌┌─┐┬─┐┌─┐┬
//  ║ ╦├┤ │││├┤ ├┬┘├─┤│
//  ╚═╝└─┘┘└┘└─┘┴└─┴ ┴┴─┘
////////////////////////////////////////////////////////////////////////////////

// ask the applications to omit their client-side decorations
prefer-no-csd


hotkey-overlay {
    // disable hotkeys on startup
    skip-at-startup

    // hide all actions not bound to any key (only on next release)
    // hide-not-bound
}

// cursor setup
cursor {
    // theme and size
    xcursor-size 32
    xcursor-theme "default"

    // hide conditions
    hide-after-inactive-ms 5000
}

overview {
    zoom 0.45

    // disable workspace shadow
    workspace-shadow { off; }
}

environment {
    DISPLAY ":0"

    QT_QPA_PLATFORM "wayland"

    _JAVA_AWT_WM_NONREPARENTING "1"
}


////////////////////////////////////////////////////////////////////////////////
//  ╔═╗┬ ┬┌┬┐┌─┐┌─┐┌┬┐┌─┐┬─┐┌┬┐
//  ╠═╣│ │ │ │ │└─┐ │ ├─┤├┬┘ │
//  ╩ ╩└─┘ ┴ └─┘└─┘ ┴ ┴ ┴┴└─ ┴
////////////////////////////////////////////////////////////////////////////////

// start some processes
spawn-at-startup "~/.config/niri/scripts/scripter" "autostart"


////////////////////////////////////////////////////////////////////////////////
//  ╦┌┐┌┌─┐┬ ┬┌┬┐
//  ║│││├─┘│ │ │
//  ╩┘└┘┴  └─┘ ┴
////////////////////////////////////////////////////////////////////////////////

input {
    keyboard {
        numlock

        xkb {
            layout "br,us"
        }
    }

    touchpad {
        tap
        dwt
        natural-scroll
    }

    // move focus when mouse moves
    focus-follows-mouse max-scroll-amount="0%"

    // move mouse when focus change
    warp-mouse-to-focus

    // repeating workspace command switch back to prior workspace
    workspace-auto-back-and-forth
}


////////////////////////////////////////////////////////////////////////////////
//  ╦  ┌─┐┬ ┬┌─┐┬ ┬┌┬┐
//  ║  ├─┤└┬┘│ ││ │ │
//  ╩═╝┴ ┴ ┴ └─┘└─┘ ┴
////////////////////////////////////////////////////////////////////////////////

layout {
    gaps 20

    // no background color for workspaces
    background-color "transparent"

    // center a column when changing focus
    center-focused-column "on-overflow"

    // default width of the new windows
    default-column-width { proportion 0.5; }

    // tabbed column display mode
    default-column-display "tabbed"

    // custom widths for "switch-preset-column-width"
    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
        proportion 1.0
    }

    // custom heights for "switch-preset-window-height"
    preset-window-heights {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
        proportion 1.0
    }

    // borders (only focused windows)
    focus-ring {
        width 4

        active-gradient from="#17BAEB" to="#D12626" angle=135 relative-to="workspace-view"
        inactive-color "#232350"
        urgent-color "#ff7f7f"
    }

    // shadows
    shadow {
        on

        // shadow color
        color "#000F"

        // shadow blur radius
        softness 20

        // expands the shadow
        spread 5

        // moves the shadow relative to the window
        offset x=0 y=10
    }

    // shrink the area occupied by windows
    struts {
        left 40
        right 40
    }

    // window insert position hint
    insert-hint {
        gradient from="#ff0b00" to="#ffc88080" angle=45 relative-to="workspace-view"
    }

    // column tab indicator
    tab-indicator {
        // gaps
        gap 8
        gaps-between-tabs 10

        // tab dimensions
        width 8
        length total-proportion=0.3

        corner-radius 10

        // tab indicator tweaks
        place-within-column
        hide-when-single-tab
    }
}


////////////////////////////////////////////////////////////////////////////////
//  ╦═╗┬ ┬┬  ┌─┐┌─┐
//  ╠╦╝│ ││  ├┤ └─┐
//  ╩╚═└─┘┴─┘└─┘└─┘
////////////////////////////////////////////////////////////////////////////////

window-rule {
    // window rounding borders
    geometry-corner-radius 10

    clip-to-geometry true

    // never draw focus ring and border behind the window
    draw-border-with-background false
}

// make inactive windows semitransparent
window-rule {
    match is-active=false
    opacity 0.95
}

window-rule {
    match app-id=r"^[fF]irefox$" title="^Picture-in-Picture$"

    open-floating true
    default-column-width { fixed 480; }
    default-window-height { fixed 270; }
}

// apply wallpaper to backdrop not only workspace view
layer-rule {
    match namespace="^swww-daemon$"
    place-within-backdrop true
}


////////////////////////////////////////////////////////////////////////////////
//  ╦╔═┌─┐┬ ┬┌┐ ┬┌┐┌┌┬┐┌─┐
//  ╠╩╗├┤ └┬┘├┴┐││││ ││└─┐
//  ╩ ╩└─┘ ┴ └─┘┴┘└┘─┴┘└─┘
////////////////////////////////////////////////////////////////////////////////

binds {
    //// Programs //////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////

    // terminal
    Mod+Return hotkey-overlay-title="Open a Terminal" { spawn "footclient"; }


    //// Multimedia Keys ///////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////

    // volume
    XF86AudioRaiseVolume { spawn "~/.config/niri/scripts/scripter" "multimedia" "speaker" "set" "+5"; }
    XF86AudioLowerVolume { spawn "~/.config/niri/scripts/scripter" "multimedia" "speaker" "set" "-5"; }
    XF86AudioMute { spawn "~/.config/niri/scripts/scripter" "multimedia" "speaker" "mute"; }

    // microphone
    XF86AudioMicMute { spawn "~/.config/niri/scripts/scripter" "multimedia" "mic" "mute"; }

    // brightness
    XF86MonBrightnessUp { spawn "~/.config/niri/scripts/scripter" "brightness" "set" "+5%"; }
    XF86MonBrightnessDown { spawn "~/.config/niri/scripts/scripter" "brightness" "set" "-5%"; }

    // screenshot
    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }


    //// Window Management /////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////

    Mod+Q    { close-window; }

    Mod+H    { focus-column-left; }
    Mod+J    { focus-window-down; }
    Mod+K    { focus-window-up; }
    Mod+L    { focus-column-right; }

    Mod+Shift+H    { move-column-left; }
    Mod+Shift+J    { move-window-down; }
    Mod+Shift+K    { move-window-up; }
    Mod+Shift+L    { move-column-right; }

    Mod+Space    { switch-focus-between-floating-and-tiling; }


    //// Column and Window Management //////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////

    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { switch-preset-window-height; }

    Mod+Minus { set-column-width "-5%"; }
    Mod+Equal { set-column-width "+5%"; }

    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }


    //// Workspace Management //////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////

    Mod+I { focus-workspace-up; }
    Mod+U { focus-workspace-down; }

    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }

    Mod+Shift+1 { move-column-to-workspace 1; }
    Mod+Shift+2 { move-column-to-workspace 2; }
    Mod+Shift+3 { move-column-to-workspace 3; }
    Mod+Shift+4 { move-column-to-workspace 4; }
    Mod+Shift+5 { move-column-to-workspace 5; }
    Mod+Shift+6 { move-column-to-workspace 6; }
    Mod+Shift+7 { move-column-to-workspace 7; }
    Mod+Shift+8 { move-column-to-workspace 8; }
    Mod+Shift+9 { move-column-to-workspace 9; }

    Mod+Shift+U { move-column-to-workspace-down; }
    Mod+Shift+I { move-column-to-workspace-up; }


    //// Monitor Management ////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////

    Mod+Control+H { focus-monitor-left; }
    Mod+Control+J { focus-monitor-down; }
    Mod+Control+K { focus-monitor-up; }
    Mod+Control+L { focus-monitor-right; }

    Mod+Control+Shift+H { move-column-to-monitor-left; }
    Mod+Control+Shift+J { move-column-to-monitor-down; }
    Mod+Control+Shift+K { move-column-to-monitor-up; }
    Mod+Control+Shift+L { move-column-to-monitor-right; }


    //// Layout management /////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////

    // move the focused window in and out of a column.
    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    // consume one window from the right to the bottom of the focused column
    Mod+Comma { consume-window-into-column; }

    // expel the bottom window from the focused column to the right
    Mod+Period { expel-window-from-column; }

    // move the focused window between the floating and the tiling layout
    Mod+V { toggle-window-floating; }

    // toggle tabbed column display mode
    Mod+T { toggle-column-tabbed-display; }


    //// Mouse and Touchpad Scrolling //////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////

    Mod+WheelScrollDown       cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp         cooldown-ms=150 { focus-workspace-up; }

    Mod+Shift+WheelScrollDown cooldown-ms=150 { focus-column-right; }
    Mod+Shift+WheelScrollUp   cooldown-ms=150 { focus-column-left; }

    Mod+TouchpadScrollDown    cooldown-ms=150 { focus-workspace-down; }
    Mod+TouchpadScrollUp      cooldown-ms=150 { focus-workspace-up; }

    Mod+TouchpadScrollLeft    cooldown-ms=150 { focus-column-left; }
    Mod+TouchpadScrollRight   cooldown-ms=150 { focus-column-right; }


    //// Miscellaneous /////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////

    // quit the niri session
    Mod+Shift+Q { quit skip-confirmation=true; }

    // shows a list of important hotkeys.
    Mod+Alt+H { show-hotkey-overlay; }

    // open/close the Overview
    Mod+O repeat=false { toggle-overview; }

    // powers off the monitors
    Mod+Shift+P { power-off-monitors; }

    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }
}


////////////////////////////////////////////////////////////////////////////////
//  ╔═╗┌┐┌┬┌┬┐┌─┐┌┬┐┬┌─┐┌┐┌┌─┐
//  ╠═╣│││││││├─┤ │ ││ ││││└─┐
//  ╩ ╩┘└┘┴┴ ┴┴ ┴ ┴ ┴└─┘┘└┘└─┘
////////////////////////////////////////////////////////////////////////////////

animations {
    window-open {
        curve "linear"
        duration-ms 200
        custom-shader "
            vec4 open_color(vec3 coords_geo, vec3 size_geo) {
                vec3 coords_tex = niri_geo_to_tex * coords_geo;
                vec4 color = texture2D(niri_tex, coords_tex.st);

                vec2 coords = (coords_geo.xy - vec2(0.5, 0.5)) * size_geo.xy * 2.0;
                coords = coords / length(size_geo.xy);

                float p = niri_clamped_progress;
                if (p * p <= dot(coords, coords))
                    color = vec4(0.0);

                return color * p;
            }
        "
    }

    window-resize {
        spring damping-ratio=0.50 stiffness=500 epsilon=0.00001
    }

    window-close {
        curve "linear"
        duration-ms 300
        custom-shader "
            vec4 close_color(vec3 coords_geo, vec3 size_geo) {
                // Simulate an accelerated fall: square the (linear) progress.
                float progress = niri_clamped_progress * niri_clamped_progress;

                // Get our rotation pivot point coordinates at the bottom center of the window.
                vec2 coords = (coords_geo.xy - vec2(0.5, 1.0)) * size_geo.xy;

                // Move the window down to simulate a fall.
                coords.y -= progress * 500.0;

                // Randomize rotation direction and maximum angle.
                float random = (niri_random_seed - 0.5) / 2.0;
                random = sign(random) - random;
                float max_angle = 0.5 * random;

                // Rotate the window around our pivot point.
                float angle = progress * max_angle;
                mat2 rotate = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));
                coords = rotate * coords;

                // Transform the coordinates back.
                coords_geo = vec3(coords / size_geo.xy + vec2(0.5, 1.0), 1.0);

                // Sample the window texture.
                vec3 coords_tex = niri_geo_to_tex * coords_geo;
                vec4 color = texture2D(niri_tex, coords_tex.st);

                // Multiply by alpha to fade out.
                return color * (1.0 - (niri_clamped_progress / 1.5));
            }
        "
    }

    window-movement {
        spring damping-ratio=0.65 stiffness=500 epsilon=0.00001
    }

    horizontal-view-movement {
        curve "ease-out-cubic"
        duration-ms 400
    }

    workspace-switch {
        spring damping-ratio=0.65 stiffness=500 epsilon=0.00001
    }

    overview-open-close {
        spring damping-ratio=0.60 stiffness=500 epsilon=0.00001
    }
}
